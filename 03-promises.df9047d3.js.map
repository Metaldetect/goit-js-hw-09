{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,MAAMC,EAAQC,SAASP,EAAKQ,SAASC,MAAMC,OACrCC,EAAOJ,SAASP,EAAKQ,SAASG,KAAKD,OACnCE,EAASL,SAASP,EAAKQ,SAASI,OAAOF,OAE7C,GAAIJ,GAAS,GAAKK,EAAO,GAAKC,EAAS,EACrC,OAAOC,EAAAf,GAASgB,OAAOC,QACrB,QACA,6BACA,aAIJ,IAAIC,EAAeC,QAAQC,UAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,IAAK,CAC/B,MAAMC,EAAed,EAAQK,EAAOQ,EAEpCH,EAAeA,EACZK,MAAK,KAAMC,OAcKC,EAdSJ,EAcCV,EAdEW,EAe1B,IAAIH,SAAQ,CAACC,EAASM,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFP,EAAQ,C,SAAEK,E,MAAUd,IAEpBe,EAAO,C,SAAED,E,MAAUd,GAAQ,GAE5BA,EAAM,IAVb,IAAuBc,EAAUd,CAde,IACzCY,MAAK,EAACE,SAAEA,EAAQd,MAAEA,MACjBI,EAAAf,GAAS+B,OAAOC,QACd,uBAAqBP,QAAiBd,MAAU,IAGnDsB,OAAM,EAACR,SAAEA,EAAQd,MAAEA,MAClBI,EAAAf,GAAS+B,OAAOG,QACd,sBAAoBT,QAAed,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  if (delay <= 0 || step < 0 || amount < 0) {\n    return Notiflix.Report.warning(\n      'Oops!',\n      'Please enter valid numbers',\n      'Try again'\n    );\n  }\n\n  let promiseChain = Promise.resolve();\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + step * i;\n\n    promiseChain = promiseChain\n      .then(() => createPromise(i, currentDelay))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","delay1","parseInt","elements","delay","value","step","amount","$parcel$interopDefault","Report","warning","promiseChain","Promise","resolve","i","currentDelay","then","$47d4ff9957288465$var$createPromise","position","reject","shouldResolve","Math","random","setTimeout","Notify","success","catch","failure"],"version":3,"file":"03-promises.df9047d3.js.map"}